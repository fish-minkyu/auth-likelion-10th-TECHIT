spring:
  security:
    oauth2:
      client:
        # 설정 1번. OAuth2 서비스 제공자를 사용하는데 필요한 정보를 등록하는 설정
        provider:
          # 변수 이름(OAuth를 어디서 받을 것인지 의미 - 개발자가 결정), 일종의 객체
          naver:
            # 인증 요청 URL: 인증 시도를 보내는 URL, 회원가입, 로그인, 인증의 요청을 보내는 URL 경로
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            # AccessToken 요청 URL: 인증 완료 후 AccessToken을 요청하는 URL
            token-uri: https://nid.naver.com/oauth2.0/token
            # 사용자 정보 조회 URL: Access Token을 가지고 실제 사용자 정보를 받아오는 부분
            user-info-uri: https://openapi.naver.com/v1/nid/me
            # 응답받은 사용자 정보 중 사용자 이름이 무엇인지 담겨있는 JSON Key
            user-name-attribute: response

#            "response": {
#              "email": "openapi@naver.com",
#              "nickname": "OpenAPI",
#              "profile_image": "https://ssl.pstatic.net/static/pwe/address/nodata_33x33.gif",
#              "age": "40-49",
#              "gender": "F",
#              "id": "32742776",
#              "name": "오픈 API",
#              "birthday": "10-01",
#              "birthyear": "1900",
#              "mobile": "010-0000-0000"
#            }

        # 설정 2번. 필요한 정보
        registration:
          naver:
            client-id: jp7wBNtkFGEFcFwq4CVa
            client-secret: aOZVO8MPLD
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Naver
            # 쓰고자 하는 사용자 정보 (필수값은 아님)
            scope:
              - nickname
              - email
              - name
              - profile_image

  datasource:
    url: jdbc:sqlite:db.sqlite
    driver-class-name: org.sqlite.JDBC
    username: sa
    password: password

  jpa:
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    show-sql: true

# 커스텀 설정 (Spring 내부 설정 아님, 정보를 저장하기 위한 용도로만 활용)
# 서비스 단계가 아닌 개발 단계이므로 이렇게 했다.
jwt:
  # 영문 기준 32글자 이상되어야 함
  secret: customConfigakdjfidfkemldmakldfjkejikdfmakmclkxmclmhsakfh